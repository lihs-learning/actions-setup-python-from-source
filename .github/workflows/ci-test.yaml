on:
  push:
    branches:
      - "*"
      - "!release"
      - "!test"
name: Run Test Cases
jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        python_version: ['3.4.10', '3.5']
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}
      - name: Setup python
        if: ${{ matrix.python_version != '2.7.18' && matrix.python_version != '3.4.10' }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python_version }}
          architecture: x64
      - name: Setup python manually
        if: ${{ matrix.python_version == '2.7.18' || matrix.python_version == '3.4.10' }}
        env:
          PYTHON_VERSION: ${{ matrix.python_version }}
          PYTHON_SOURCE_URL: https://www.python.org/ftp/python/${{ matrix.python_version }}/Python-${{ matrix.python_version }}.tgz
        run: |
          sudo apt-get update
          sudo apt-get install -y make build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev libncursesw5-dev xz-utils tk-dev liblzma-dev tk-dev
          echo "--- openssl ---"
          which openssl
          ls /usr/local/openssl
          cd /tmp
          curl -s -L "$PYTHON_SOURCE_URL" | tar -zxf - -C ./
          cd Python-${{ matrix.python_version }}
          ./configure --enable-optimizations --prefix=/opt/python/
          make
          sudo make altinstall
          MAJOR_MINOR=$(echo $PYTHON_VERSION | cut -d'.' -f1,2)
          sudo ln -s "/opt/python/bin/python$MAJOR_MINOR" /opt/python/bin/python
          echo "/opt/python/bin" >> $GITHUB_PATH
      - name: Check pip and python
        env:
          PYTHON_VERSION: ${{ matrix.python_version }}
          PIP_BOOTSTRAP_SCRIPT_PREFIX: https://bootstrap.pypa.io/pip
        run: |
          if python -c 'import pip' &> /dev/null; then
            echo "already has pip"
          else
            echo "install pip"
            MAJOR_MINOR=$(echo $PYTHON_VERSION | cut -d'.' -f1,2)
            echo "get-pip.py url: $PIP_BOOTSTRAP_SCRIPT_PREFIX/$MAJOR_MINOR/get-pip.py"
            curl -s -L "$PIP_BOOTSTRAP_SCRIPT_PREFIX/$MAJOR_MINOR/get-pip.py" | python
          fi
          type pip
          pip --version
      - name: Install dependencies
        env:
          PYTHON_VERSION: ${{ matrix.python_version }}
          PIP_BOOTSTRAP_SCRIPT_PREFIX: https://bootstrap.pypa.io/pip
        run: |
          python -m pip install --upgrade pip
          python -m pip install pytest
      - name: Test
        run: |
          python --version
          python -c "print('Hello Python')"
          type pytest
          pytest test_py.py

